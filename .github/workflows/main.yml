name: camera_ros build

on: [push, pull_request]

jobs:
  build:
    name: camera_ros (${{ matrix.distribution }})
    runs-on: ubuntu-latest
    # Test on the latest LTS and current version ('rolling'),
    # but only require to pass on LTS distributions.
    strategy:
      matrix:
        distribution: ["foxy", "rolling"]
    continue-on-error: ${{ matrix.distribution == 'rolling' }}

    steps:
      - name: install libcamera
        run: |
          sudo apt install python3-pip ninja-build python3-yaml python3-ply python3-jinja2 libgnutls28-dev
          sudo pip3 install meson
          git clone https://git.libcamera.org/libcamera/libcamera.git --depth=1
          cd libcamera
          meson build --buildtype release -Dcam=disabled -Ddocumentation=disabled -Dgstreamer=disabled -Dipas="" -Dlc-compliance=disabled -Dpipelines=simple -Dqcam=disabled -Dtest=false -Dtracing=disabled -Dv4l2=false
          meson compile -C build
          sudo meson install -C build

      - name: install ROS2 ${{ matrix.distribution }}
        uses: ros-tooling/setup-ros@0.2.1
        with:
          required-ros-distributions: ${{ matrix.distribution }}

      - name: build and test
        uses: ros-tooling/action-ros-ci@v0.2
        with:
          package-name: camera_ros
          target-ros2-distro: ${{ matrix.distribution }}
